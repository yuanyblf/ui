{{#accordion-list showExpandAll=false as | al expandFn |}}
  {{#accordion-list-item
       title=(t 'clusterNew.amazoneks.access.title')
       detail=(t 'clusterNew.amazoneks.access.detail')
       expandAll=expandAll
       expand=(action expandFn)
       expandOnInit=true
  }}
    <div class="row">
      <div class="col span-4">
        <label class="acc-label">{{t 'nodeDriver.amazonec2.region.label'}}</label>
        {{#if (eq step 1)}}
          <select class="form-control" onchange={{action (mut config.region) value="target.value"}}>
            {{#each regionChoices as |choice|}}
              <option value={{choice}} selected={{eq config.region choice}}>{{choice}}</option>
            {{/each}}
          </select>
        {{else}}
          <div>{{config.region}}</div>
        {{/if}}
      </div>

      <div class="col span-4">
        <label class="acc-label">{{t 'nodeDriver.amazonec2.accessKey.label'}}</label>
        {{#if (eq step 1)}}
          {{input type="text" name="username" classNames="form-control" placeholder=(t 'nodeDriver.amazonec2.accessKey.placeholder') value=config.accessKey}}
        {{else}}
          <div>{{config.accessKey}}</div>
        {{/if}}
      </div>

      <div class="col span-4">
        <label class="acc-label">{{t 'nodeDriver.amazonec2.secretKey.label'}}</label>
        {{#if (eq step 1)}}
          {{input type="password" name="password" classNames="form-control" placeholder=(t 'nodeDriver.amazonec2.secretKey.placeholder') value=config.secretKey}}
        {{else}}
          <div class="text-muted text-italic">{{t 'nodeDriver.amazonec2.secretKey.provided'}}</div>
        {{/if}}
      </div>
    </div>

    {{#if (eq step 1)}}
      <div class="row">
        <div class="span-8 offset-4">
          <p class="text-info text-small m-0">{{t 'nodeDriver.amazonec2.access.help'}}</p>
        </div>
      </div>
    {{/if}}
  {{/accordion-list-item}}

  {{#if (eq step 1)}}
    {{save-cancel
        editing=(eq mode 'edit')
        save="awsLogin"
        cancel=close
        createLabel="nodeDriver.amazoneks.access.next"
        savingLabel="nodeDriver.amazoneks.access.loading"
    }}
  {{/if}}

  {{#if (gte step 2)}}
    {{#accordion-list-item
         title=(t 'nodeDriver.amazoneks.role.title')
         detail=(t 'nodeDriver.amazoneks.role.detail')
         showExpand=false
         expandOnInit=true
         expandAll=al.expandAll
         expand=(action expandFn)
    }}
      <div class="row">
        <div class="col span-6">
          <label class="acc-label">{{t 'nodeDriver.amazoneks.role.label'}}</label>
          {{#if (eq step 2)}}
            {{#if (eq serviceRoleMode 'default')}}
              <div class="radio">
                <div class="radio">
                  <label>
                    {{radio-button selection=serviceRoleMode value="default"}}
                    {{t 'nodeDriver.amazoneks.role.radio.default'}}
                  </label>
                  <label>
                    {{radio-button selection=serviceRoleMode value="custom"}}
                    {{t 'nodeDriver.amazoneks.role.radio.custom'}}
                  </label>
                </div>
              </div>
            {{else}}
              {{new-select
                  classNames="form-control"
                  value=selectedServiceRole
                  content=serviceRoles
                  optionValuePath="RoleId"
                  optionLabelPath="RoleName"
              }}
            {{/if}}
          {{else}}
            <div>
              {{#if config.serviceRole}}
                {{readableServiceRole}}
              {{else}}
                {{t 'nodeDriver.amazoneks.role.noneSelected'}}
              {{/if}}
            </div>
          {{/if}}
        </div>
      </div>
    {{/accordion-list-item}}

    {{#if (eq step 2)}}
      {{save-cancel
          editing=(eq mode 'edit')
          save="loadVPS"
          cancel=close
          createLabel="nodeDriver.amazoneks.role.next"
          savingLabel="nodeDriver.amazoneks.access.loading"
      }}
    {{/if}}
  {{/if}}

  {{#if (gte step 3)}}
    {{#accordion-list-item
         title=(t 'nodeDriver.amazoneks.vpc.title')
         detail=(t 'nodeDriver.amazoneks.vpc.detail')
         showExpand=false
         expandOnInit=true
         expandAll=al.expandAll
         expand=(action expandFn)
    }}
      <div class="row">
        <div class="col span-6">
          <label class="acc-label">{{t 'nodeDriver.amazoneks.vpc.title'}}</label>
          {{#if (eq step 3)}}
            {{#if (eq vpcSubnetMode 'default')}}
              <div class="radio">
                <div class="radio">
                  <label>
                    {{radio-button selection=vpcSubnetMode value="default"}}
                    {{t 'nodeDriver.amazoneks.vpc.radio.default'}}
                  </label>
                  <label>
                    {{radio-button selection=vpcSubnetMode value="custom"}}
                    {{t 'nodeDriver.amazoneks.vpc.radio.custom'}}
                  </label>
                </div>
              </div>
            {{else}}
              {{new-select
                  classNames="form-control"
                  value=config.virtualNetwork
                  content=filteredVpcs
                  optionValuePath="id"
                  optionLabelPath="label"
              }}
            {{/if}}
          {{else}}
            {{#if (eq vpcSubnetMode "default")}}
              <div>
                {{t 'nodeDriver.amazoneks.vpc.noneSelected'}}
              </div>
            {{else}}
              <div>
                {{config.virtualNetwork}}
              </div>
            {{/if}}
          {{/if}}
        </div>

        {{#if (eq step 4)}}
          <div class="col span-6">
            <label class="acc-label">{{t 'nodeDriver.amazoneks.subnet.title'}}</label>
            <select class="form-control existing-subnet-groups" multiple="true" onchange={{action 'multiSubnetGroupSelect' ''}}>
              {{#each filteredSubnets as |choice|}}
                <option value={{choice.subnetId}} selected={{array-includes config.subnets choice.subnetId}}>{{choice.subnetName}} ({{choice.subnetId}})</option>
              {{/each}}
            </select>
          </div>
        {{else}}
          {{#if (and (eq vpcSubnetMode "custom") (gte step 4)) }}
            <div class="col span-6">
              <label class="acc-label">{{t 'nodeDriver.amazoneks.subnet.title'}}</label>
              {{#each config.subnets as |sub|}}
                <div>{{sub}}</div>
              {{/each}}
            </div>
          {{/if}}
        {{/if}}
      </div>

    {{/accordion-list-item}}

    {{#if (eq step 3)}}
      {{#if (eq vpcSubnetMode "default")}}
        {{save-cancel
            editing=(eq mode 'edit')
            saveDisabled=canSaveVPC
            save="setVPCS"
            cancel="cancel"
            createLabel="nodeDriver.amazoneks.vpc.nextRancherDefault"
            savingLabel="nodeDriver.amazoneks.vpc.loadingRancherDefault"
        }}
      {{else}}
        {{save-cancel
            editing=(eq mode 'edit')
            saveDisabled=canSaveVPC
            save="setVPCS"
            cancel="cancel"
            createLabel="nodeDriver.amazoneks.vpc.next"
            savingLabel="nodeDriver.amazoneks.vpc.loading"
        }}
      {{/if}}
    {{/if}}

    {{#if (eq step 4)}}
      {{save-cancel
          editing=(eq mode 'edit')
          saveDisabled=(lte config.subnets.length 0)
          save="setSubnets"
          cancel="cancel"
          createLabel="nodeDriver.amazoneks.subnet.next"
          savingLabel="nodeDriver.amazoneks.subnet.loading"
      }}
    {{/if}}
  {{/if}}

  {{#if (and (gte step 5) (eq vpcSubnetMode "custom") )}}
    {{#accordion-list-item
         title=(t 'nodeDriver.amazoneks.securityGroup.title')
         detail=(t 'nodeDriver.amazoneks.securityGroup.detail')
         showExpand=false
         expandOnInit=true
         expandAll=al.expandAll
         expand=(action expandFn)
    }}
      <div class="row">
        {{#if (eq step 5)}}
          <select class="form-control existing-security-groups" multiple="true" onchange={{action 'multiSecurityGroupSelect' ''}}>
            {{#each filteredSecurityGroups as |choice|}}
              <option value={{choice.GroupId}} selected={{array-includes config.securityGroups choice.GroupId}}>{{choice.GroupName}} ({{choice.GroupId}})</option>
            {{/each}}
          </select>
        {{else}}
          {{#if config.securityGroups}}
            {{#each config.securityGroups as |sg|}}
              <div>{{sg}}</div>
            {{/each}}
          {{/if}}
        {{/if}}
      </div>
    {{/accordion-list-item}}

    {{#if (eq step 5)}}
      {{save-cancel
          editing=(eq mode 'edit')
          saveDisabled=canSaveSG
          save=(action (mut step) 6)
          cancel="cancel"
          createLabel="nodeDriver.amazonec2.securityGroup.next"
          savingLabel="nodeDriver.amazonec2.securityGroup.loading"
      }}
    {{/if}}
  {{/if}}

  {{#if (eq step 6)}}
    {{#accordion-list-item
         title=(t 'clusterNew.nodes.title')
         detail=(t 'clusterNew.nodes.detail')
         showExpand=false
         expandOnInit=true
         expandAll=al.expandAll
         expand=(action expandFn)
    }}
      <div class="row">
        <div class="col span-4">
          <label class="acc-label">{{t 'nodeDriver.amazonec2.instanceType.label'}}</label>
          {{new-select
              classNames="form-control"
              value=config.instanceType
              content=instanceTypes
              optionValuePath="name"
              optionLabelPath="name"
              optionGroupPath="group"
          }}
        </div>

        <div class="col span-4">
          <label class="acc-label">Minimum ASG Size</label>
          {{input-number value=config.minimumNodes min=1}}
        </div>

        <div class="col span-4">
          <label class="acc-label">Maximum ASG Size</label>
          {{input-number value=config.maximumNodes min=1}}
        </div>
      </div>
    {{/accordion-list-item}}

    {{save-cancel
        editing=(eq mode 'edit')
        save="driverSave"
        cancel=close
    }}
  {{/if}}

  {{top-errors errors=errors}}
  {{top-errors errors=otherErrors}}
  {{top-errors errors=clusterErrors}}
{{/accordion-list}}
