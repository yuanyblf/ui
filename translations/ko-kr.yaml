---
languageName: "한국어"
languageContribute: "Rancher 번역을 도와주세요"
generic:
  actions: 동작
  activate: 활성화
  add: 추가
  all: 전체
  any: 아무거나
  application: 애플리케이션
  cancel: 취소
  closeModal: 닫기
  cluster: 클러스터
  collapseAll: 모두 접기
  command: 명령어
  comingSoon: 출시 예정
  confirm: 확인
  containers: 컨테이너
  created: 생성됨
  createdDate: "생성일 {date}"
  customize: 커스터마이즈
  default: 기본값
  description: 설명
  details: 상세 정보
  disable: 비활성화
  disabled: 비활성화됨
  displayName: 표시되는 이름
  dockerId: Docker ID
  domainName: 도메인 이름
  done: 완료
  download: 다운로드
  edit: 수정하기
  enable: 활성화
  enabled: 활성화됨
  entrypoint: Entrypoint
  environment: 환경
  expandAll: 모두 확장 
  gigabyte: 'GB'
  hardware: 하드웨어
  healthy: 정상
  help: 도움말
  id: ID
  image: 이미지
  internal: 내부
  ipAddress: IP 주소
  key: 키
  limit: 제한
  limits: 제한
  loading: "로딩중..."
  mibibyte: 'MiB'
  missing: "*%MISSING% *"
  member: 멤버
  moreActions: 더 많은 작업
  na: '해당 없음'
  name: 이름
  namespace: 네임스페이스
  namespaces: 네임 스페이스
  no: "아니요"
  noRating: No Rating
  none: 없음
  paste: 붙여넣기
  pod: pod
  ports: 포트
  remove: 제거
  role: 역할
  save: 저장
  saved: 저장됨
  saving: 저장 중
  search: 찾기
  searchOrCustomInput: 사용자 정의 값을 검색하거나 입력하십시오.
  seconds: 초
  select: 선택
  service: 서비스
  services: 서비스
  state: 상태
  tags: 태그
  test: 테스트
  testing: 테스트 중
  to: 에게
  total: 총합계
  type: 타입
  unknown: 알수 없음
  user: 사용자
  upload: 업로드
  uuid: UUID
  value: 값
  yes: "예"
realmNames:
  all: 전체
  usWest: 미국 서부
  usEast: 미국 동부
  asia: 아시아
  euWest: 유럽 서부
  euEast: 유럽 동부
accountsPage:
  detail:
    header: 사용자 세부정보
    table:
      headers:
        permission: 권한
        role: 역할
        clusterName: 클러스터
        projectName: 프로젝트
        active: 활성
        created: 부여 됨
      global:
        title: 전역 권한
        description: 전체 설치에 영향을 미치는 항목 관리에 대한 액세스
        admin: 이 사용자는 관리자이며 모든 권한을 가집니다.
      cluster:
        title: 클러스터 역할
        description: 개별 클러스터에 대해 해당 사용자에게 부여된 역할
        noRoles: 이 사용자에게는 클러스터 역할이 없습니다.
      project:
        title: 프로젝트 역할
      roles:
        title: 역할
  index:
    header: 사용자
    localLink: 사용자 추가
    table:
      id: ID
      kind: 종류
      identity: 신원
      noData: 아직 사용자가 없습니다.
      noName: 없음
  new:
    header: 사용자 추가
    errors:
      usernameReq: 사용자 이름은 반드시 입력해야 합니다.
      pwReq: 비밀번호는 필수항목입니다.
    form:
      username:
        labelText: 사용자 이름
        placeholder: "예를 들어 jsmith"
      password:
        labelText: 암호
      name:
        labelText: 표시되는 이름
        placeholder: "예를 들어 존 스미스"
      type:
        labelText: 계정 유형
      description:
        labelText: 설명
        placeholder: "예: 이 계정은 Johon Smith 입니다."
  modal:
    password: 비밀번호 변경하기
podSecurityPoliciesPage:
  index:
    header: Pod 보안 정책
    table:
      name: 이름
      created: 생성 시간
  addPodSecurityPolicy: 정책 추가
  editPodSecurityPolicy: 정책 편집
  detail:
    header: 정책
  saveEdit: 수정
  saveNew: 생성
  new:
    errors:
      nameReq: 이름은 필수 입력사항입니다.
    form:
      name:
        labelText: 이름
rolesPage:
  title: 역할
  index:
    localLink: 역할 추가
    table:
      name: 이름
      created: 생성 시간
  addRole: 역할 추가
  saveEdit: 편집
  saveNew: 생성
  new:
    form:
      name:
        labelText: 이름
      allow:
        create: 생성
        delete: 삭제
        update: 수정
        labelText: 허용
        resource: 리소스
      otherRole:
        role: 역할
      policy:
        policy: 정책
apiPage:
  currentEndpoint: '엔드포인트'
  table:
    state: 상태
    description: 설명
    created: 생성됨
authPage:
  shibboleth:
    enabled:
      header: "{providerName} 활성화"
      authenticated:
        header:
          text: 인증
      disableAccess:
        disable: 액세스 제어 사용 안 함
      groupsField: '그룹'
      displayName: '사용자 이름'
      userName: '사용자 이름:'
      userId: '사용자 ID:'
    disabled:
      name:
        labelText: 표시 이름 필드
      username:
        labelText: 사용자 이름 필드
      uid:
        labelText: UID 필드
      groups:
        labelText: 그룹 필드
      testAuth:
        header: 'Test & 인증 활성화'
  root:
    header: Access Control
  github:
    standard: GitHub
    enterprise: GitHub Enterprise
    header:
      enabled:
        label: "{github} 활성화"
    authenticated:
      header:
        text: 인증
        clientId:
          text: "클라이언트 ID:"
    notAuthenticated:
      ul:
        li2:
          ul:
            li2: 홈페이지 URL
      form:
        clientId:
          labelText: 클라이언트 ID
  azuread:
    configure:
      domain:
        label: 도메인
    test:
      password:
        label: 로그인 비밀 번호
      pre: Azure를 위한 인증
  0:
    header: 액세스 제어
catalogPage:
  index:
    filters:
      label: 카탈로그 필터
    certified:
      rancher:
        rancher: Rancher 연구소
        partner: 공식
      pl:
        rancher: 코어
        partner: 공식
    action:
      launch: 세부정보 보기
      alreadyDeployed: 이미 배포됨
certificatesPage:
  detail:
    header: '인증서: {name}'
  index:
    header: 인증서
    linkTo: 인증서 추가
  new:
    header: 인증서 추가
membersPage:
  add:
    form:
      role: 역할
  index:
    table:
      name: 이름
clusterPage:
  edit: 클러스터 편집
projectsPage:
  addProject: 프로젝트 추가
  editProject: 프로젝트 편집
clustersPage:
  cpu:
    label: CPU
  memory:
    label: RAM
  storage:
    label: 디스크
containerPage:
  header: '컨테이너: {name}'
  linksTab:
    header: 링크
  volumesTab:
    header: 볼륨
    table:
      path: 마운트 포인트
      writable: 쓰기가능
containersPage:
  table:
    sparkPrefixCpu: "CPU: "
    sparkPrefixMemory: "메모리: "
    sparkPrefixNetwork: "네트워크: "
    sparkPrefixStorage: "저장소: "
  welcome:
    containerLink: 컨테이너 추가
    kubernetesLink: Kubernetes 설치
failWhalePage:
  header: 에러
  reloadButton: |
    <a href="#" onclick="window.location.href = window.location.href; return false;">리로드</a> 다시 시도
  logoutButton: 로그아웃
haPage:
  header: 고 가용성
  setup:
    prefix: "호스트 중 하나가 장애가 가는 경우에도 {appName} 계속 실행 되도록 여러 컨테이너를 서로 다른 호스트에 배포할 수 있습니다.  "
    link: 문서 보기
    suffix: " 설치 및 사용에 관한 정보."
  table:
    port: 포트
nodesPage:
  table:
    role: 역할
    docker: 도커
hostsPage:
  cloudHostsPage:
    addPage:
      header: 노드 추가
      name:
        label: 노드 이름
      transferUnit: TB
  new:
    addCluster:
      roles:
        label: 역할
  hostPage:
    limits:
      cpu: 'CPU 제한:'
      memory: '메모리 제한:'
    infoMultiStats:
      ip: 'IP'
      cpu: 'CPU'
      memory: '메모리'
      storage: '볼륨'
      kernel: '커널'
      docker: '도커:'
      os: 'OS'
      milliCpu:
        labelText: mCPU
    containersTab:
      header: 컨테이너
      detail: 이 호스트에서 실행 하는 컨테이너의 목록
    portsTab:
      header: 포트
      table:
        header:
          ip: IP 주소
          service: 서비스
    storageTab:
      header: 볼륨
      table:
        header:
          state: 상태
loginPage:
  shibbolethError:
    401: "Unauthorized"
    500: "Internal Server Error"
registriesPage:
  index:
    table:
      header:
        username: 사용자 이름
  new:
    form:
      username:
        labelText: 사용자 이름
        placeholder: '예: 사용자 이름'
      password:
        labelText: 비밀번호
servicePage:
  certsTab:
    title: 인증서
    default: 기본 인증서
  newBalancer:
    form:
      name:
        placeholder: 예. 웹사이트
  type:
    service: 서비스
    selectorservice: Selector
    loadbalancerservice: Load Balancer
    dnsservice: 별칭
    externalservice-ip: 외부 Ip
    externalservice-host: 외부 이름
    kubernetesservice: K8s 서비스
    networkdriverservice: 네트워크 서비스
    storagedriverservice: 스토리지 서비스
signupPage:
  form:
    button: 회원가입
    labels:
      loginUsername: 이름
      email: 이메일
  emailSuccess:
    confirm:
      resend: 이메일 다시 보내기
stackPage:
  loadBalancers:
    header: Load Balancers
userPreferencesPage:
  header: 환경 설정
  theme:
    header: 테마
    light: 밝은 테마
    auto: 자동
    autoDetail: 오전 6시 부터 오후 6 까지 자동으로 어두운 테마로 변경됩니다.
    dark: 어두운 테마
  generalInfo:
    header: 내 계정
    name:
      label: 이름
    username:
      label: 사용자 이름
    email:
      label: 이메일
verifyPage:
  account:
    linkText: 로그인
verifyResetPasswordPage:
  header: 비밀번호 초기화
  button: 비밀번호 변경
  success:
    header: 비밀번호 재설정 됨
    subtext: 로그인 페이지로 이동 하려면 아래 링크를 클릭 합니다.
    linkText: 로그인
servicePartial:
  noContainers:
    inactive:
      start: 시작
catalogSettings:
  more:
    addActionLabel: 카탈로그 추가
confirmDelete:
  confirmAction: 제거
  cancelAction: 취소
containerLogs:
  clear: 화면 지우기
  status:
    initializing: 초기화 중...
    connected: 연결됨
containerShell:
  status:
    connected: 연결됨
    disconnected: 연결 끊김
    closed: 닫힘
copyToClipboard:
  copied: 복사되었습니다!
cruRegistry:
  address:
    dockerhub: DockerHub
editAccount:
  form:
    name:
      placeholder: '예: 홍길동'
editCluster:
  name:
    label: 이름
editContainer:
  title:
    vm: VM 수정
editHost:
  ips:
    addActionLabel: IP 추가
formIngressBackends:
  targetPort:
    placeholder: '예: 80'
formBalancerListeners:
  access:
    internal: 내부
  sourcePort:
    placeholder: '예: 80'
formBalancerRules:
  access:
    internal: 내부
  protocol:
    label: 프로토콜
  sourceIp:
    placeholder: "예: 1.2.3.4; 기본값 : 모두"
formCommand:
  console:
    label: 콘솔
  autoRestart:
    label: 자동으로 다시 시작
    always: 항상
formContainerLinks:
  addActionLabel: 링크 추가
  alias:
    placeholder: '예: 데이터베이스'
formDisks:
  name:
    label: 이름
    placeholder: '예: 데이터'
  size:
    label: 크기
  driver:
    label: 드라이버
formEngineOpts:
  engineInstallUrl:
    recommended: 추천
    latest: 최근
  engineOpts:
    addActionLabel: 엔진 옵션 추가
  engineLabels:
    addActionLabel: 엔진 라벨 추가
formEnvVar:
  labels:
    key: 키
    value: 값
formKeyValue:
  key:
    label: 키
formSeLinuxodSecurityPolicy:
  role:
    label: 역할
